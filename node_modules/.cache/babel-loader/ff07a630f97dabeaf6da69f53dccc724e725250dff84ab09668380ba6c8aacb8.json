{"ast":null,"code":"export default {\n  data() {\n    return {\n      items: ['텍스트 1', '텍스트 2', '텍스트 3'],\n      currentSlide: 0,\n      isDragging: false,\n      startMouseX: 0\n    };\n  },\n  methods: {\n    startDrag(event) {\n      this.isDragging = true;\n      this.startMouseX = event.clientX;\n    },\n    onDrag(event) {\n      if (!this.isDragging) return;\n      const deltaX = event.clientX - this.startMouseX;\n      // 여기에서 deltaX를 사용하여 슬라이더의 이동을 처리할 수 있습니다.\n    },\n\n    endDrag() {\n      this.isDragging = false;\n      // 드래그 종료 후 슬라이더의 위치를 결정하고 이동시킵니다.\n    },\n\n    endDrag(event) {\n      if (!this.isDragging) return;\n      this.isDragging = false;\n      const deltaX = event.clientX - this.startMouseX;\n      if (deltaX > 50) {\n        // 오른쪽으로 충분히 드래그\n        this.moveToPreviousSlide();\n      } else if (deltaX < -50) {\n        // 왼쪽으로 충분히 드래그\n        this.moveToNextSlide();\n      }\n    },\n    moveToPreviousSlide() {\n      if (this.currentSlide === 0) {\n        this.currentSlide = this.items.length - 1;\n      } else {\n        this.currentSlide -= 1;\n      }\n    },\n    moveToNextSlide() {\n      this.currentSlide = (this.currentSlide + 1) % this.items.length;\n    }\n\n    // 기타 필요한 메소드...\n  }\n};","map":{"version":3,"names":["data","items","currentSlide","isDragging","startMouseX","methods","startDrag","event","clientX","onDrag","deltaX","endDrag","moveToPreviousSlide","moveToNextSlide","length"],"sources":["C:\\Users\\김재호\\Desktop\\NatureCatalog-1\\src\\views\\AboutView.vue"],"sourcesContent":["<template>\r\n  <div class=\"about\">\r\n    <div class =\"head\">\r\n      <h1>Naturecatalog</h1>\r\n     <h2>Our nature, their expression</h2>\r\n    </div>\r\n    <div class=\"slider\" @mousedown=\"startDrag\" @mouseup=\"endDrag\" @mouseleave=\"endDrag\" @mousemove=\"onDrag\">\r\n      <div class=\"slider-item\" v-for=\"(item, index) in items\" :key=\"index\" :class=\"{ 'slider-item-active': currentSlide == index }\">\r\n       {{ item }}\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data () {\r\n    return {\r\n      items: ['텍스트 1', '텍스트 2', '텍스트 3'],\r\n      currentSlide: 0,\r\n      isDragging: false,\r\n      startMouseX: 0\r\n    }\r\n  },\r\n  methods: {\r\n    startDrag (event) {\r\n      this.isDragging = true\r\n      this.startMouseX = event.clientX\r\n    },\r\n    onDrag (event) {\r\n      if (!this.isDragging) return\r\n      const deltaX = event.clientX - this.startMouseX\r\n      // 여기에서 deltaX를 사용하여 슬라이더의 이동을 처리할 수 있습니다.\r\n    },\r\n    endDrag () {\r\n      this.isDragging = false\r\n      // 드래그 종료 후 슬라이더의 위치를 결정하고 이동시킵니다.\r\n    },\r\n    endDrag(event) {\r\n      if (!this.isDragging) return;\r\n      this.isDragging = false;\r\n\r\n      const deltaX = event.clientX - this.startMouseX;\r\n      if (deltaX > 50) { // 오른쪽으로 충분히 드래그\r\n        this.moveToPreviousSlide();\r\n      } else if (deltaX < -50) { // 왼쪽으로 충분히 드래그\r\n        this.moveToNextSlide();\r\n      }\r\n    },\r\n    moveToPreviousSlide() {\r\n      if (this.currentSlide === 0) {\r\n        this.currentSlide = this.items.length - 1;\r\n      } else {\r\n        this.currentSlide -= 1;\r\n      }\r\n    },\r\n    moveToNextSlide() {\r\n      this.currentSlide = (this.currentSlide + 1) % this.items.length;\r\n    }\r\n\r\n      // 기타 필요한 메소드...\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\nbody{\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n.head{\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-top: 100px;\r\n  margin-bottom: 100px;\r\n}\r\n.slider {\r\n background: darkblue;\r\n  /* 슬라이더 전체 스타일 */\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  overflow: hidden;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n.slider-item {\r\n  /* 각 슬라이더 아이템 스타일 */\r\n  background-size: cover;\r\n  background-position: center;\r\n  background: gainsboro;\r\n  width: 24em;\r\n  height: 20em;\r\n  margin: 0 1em;\r\n}\r\n</style>\r\n"],"mappings":"AAeA,eAAe;EACbA,IAAGA,CAAA,EAAK;IACN,OAAO;MACLC,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;MAClCC,YAAY,EAAE,CAAC;MACfC,UAAU,EAAE,KAAK;MACjBC,WAAW,EAAE;IACf;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,SAAQA,CAAGC,KAAK,EAAE;MAChB,IAAI,CAACJ,UAAS,GAAI,IAAG;MACrB,IAAI,CAACC,WAAU,GAAIG,KAAK,CAACC,OAAM;IACjC,CAAC;IACDC,MAAKA,CAAGF,KAAK,EAAE;MACb,IAAI,CAAC,IAAI,CAACJ,UAAU,EAAE;MACtB,MAAMO,MAAK,GAAIH,KAAK,CAACC,OAAM,GAAI,IAAI,CAACJ,WAAU;MAC9C;IACF,CAAC;;IACDO,OAAMA,CAAA,EAAK;MACT,IAAI,CAACR,UAAS,GAAI,KAAI;MACtB;IACF,CAAC;;IACDQ,OAAOA,CAACJ,KAAK,EAAE;MACb,IAAI,CAAC,IAAI,CAACJ,UAAU,EAAE;MACtB,IAAI,CAACA,UAAS,GAAI,KAAK;MAEvB,MAAMO,MAAK,GAAIH,KAAK,CAACC,OAAM,GAAI,IAAI,CAACJ,WAAW;MAC/C,IAAIM,MAAK,GAAI,EAAE,EAAE;QAAE;QACjB,IAAI,CAACE,mBAAmB,CAAC,CAAC;MAC5B,OAAO,IAAIF,MAAK,GAAI,CAAC,EAAE,EAAE;QAAE;QACzB,IAAI,CAACG,eAAe,CAAC,CAAC;MACxB;IACF,CAAC;IACDD,mBAAmBA,CAAA,EAAG;MACpB,IAAI,IAAI,CAACV,YAAW,KAAM,CAAC,EAAE;QAC3B,IAAI,CAACA,YAAW,GAAI,IAAI,CAACD,KAAK,CAACa,MAAK,GAAI,CAAC;MAC3C,OAAO;QACL,IAAI,CAACZ,YAAW,IAAK,CAAC;MACxB;IACF,CAAC;IACDW,eAAeA,CAAA,EAAG;MAChB,IAAI,CAACX,YAAW,GAAI,CAAC,IAAI,CAACA,YAAW,GAAI,CAAC,IAAI,IAAI,CAACD,KAAK,CAACa,MAAM;IACjE;;IAEE;EACJ;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}