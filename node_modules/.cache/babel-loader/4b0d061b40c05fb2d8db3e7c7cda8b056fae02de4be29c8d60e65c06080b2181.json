{"ast":null,"code":"export default {\n  data() {\n    return {\n      items: ['텍스트 1', '텍스트 2', '텍스트 3', '텍스트 4', '텍스트 5'],\n      currentSlide: 0,\n      isDragging: false,\n      startMouseX: 0,\n      slideInterval: null\n    };\n  },\n  mounted() {\n    this.startAutoSlide();\n  },\n  methods: {\n    startAutoSlide() {\n      this.slideInterval = setInterval(this.moveToNextSlide, 3000);\n    },\n    moveToNextSlide() {\n      this.currentSlide = (this.currentSlide + 1) % this.items.length;\n    },\n    moveToPreviousSlide() {\n      this.currentSlide = this.currentSlide === 0 ? this.items.length - 1 : this.currentSlide - 1;\n    },\n    startDrag(event) {\n      this.isDragging = true;\n      this.startMouseX = event.clientX;\n    },\n    endDrag(event) {\n      if (!this.isDragging) return;\n      this.isDragging = false;\n      const deltaX = event.clientX - this.startMouseX;\n      if (deltaX > 50) {\n        this.moveToPreviousSlide();\n      } else if (deltaX < -50) {\n        this.moveToNextSlide();\n      }\n    }\n  },\n  beforeUnmount() {\n    clearInterval(this.slideInterval);\n  }\n};","map":{"version":3,"names":["data","items","currentSlide","isDragging","startMouseX","slideInterval","mounted","startAutoSlide","methods","setInterval","moveToNextSlide","length","moveToPreviousSlide","startDrag","event","clientX","endDrag","deltaX","beforeUnmount","clearInterval"],"sources":["C:\\Users\\김재호\\Desktop\\NatureCatalog-1\\src\\views\\AboutView.vue"],"sourcesContent":["<template>\r\n  <div class=\"about\">\r\n    <div class =\"head\">\r\n      <h1>Naturecatalog</h1>\r\n     <h2>Our nature, their expression</h2>\r\n     <div class=\"slide-container\">\r\n    <button @click=\"moveSlideToLeft\">\r\n      <img src=\"왼쪽버튼이미지입니다.\" />\r\n    </button>\r\n   <div class=\"slide-window\">\r\n      <div class=\"slide\"\r\n           :class=\"{ slide- active : transitionOn }\"\r\n           :style=\"{transform: 'translate3d(' + slideCoord + 'px, 0, 0)',}\">\r\n        <SlideCard v-for=\"card in cardArray\" :key=\"card.name\" /></div>\r\n      </div>\r\n    </div>\r\n\r\n    <button @click=\"moveSlideToRight\">\r\n      <img src=\"오른쪽버튼이미지입니다.\"/>\r\n    </button>\r\n  </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data () {\r\n    return {\r\n      items: ['텍스트 1', '텍스트 2', '텍스트 3', '텍스트 4', '텍스트 5'],\r\n      currentSlide: 0,\r\n      isDragging: false,\r\n      startMouseX: 0,\r\n      slideInterval: null\r\n    }\r\n  },\r\n  mounted () {\r\n    this.startAutoSlide()\r\n  },\r\n  methods: {\r\n    startAutoSlide () {\r\n      this.slideInterval = setInterval(this.moveToNextSlide, 3000)\r\n    },\r\n    moveToNextSlide () {\r\n      this.currentSlide = (this.currentSlide + 1) % this.items.length\r\n    },\r\n    moveToPreviousSlide () {\r\n      this.currentSlide = this.currentSlide === 0 ? this.items.length - 1 : this.currentSlide - 1\r\n    },\r\n    startDrag (event) {\r\n      this.isDragging = true\r\n      this.startMouseX = event.clientX\r\n    },\r\n    endDrag (event) {\r\n      if (!this.isDragging) return\r\n      this.isDragging = false\r\n\r\n      const deltaX = event.clientX - this.startMouseX\r\n      if (deltaX > 50) {\r\n        this.moveToPreviousSlide()\r\n      } else if (deltaX < -50) {\r\n        this.moveToNextSlide()\r\n      }\r\n    }\r\n  },\r\n  beforeUnmount () {\r\n    clearInterval(this.slideInterval)\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\nbody{\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n.head{\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-top: 100px;\r\n  margin-bottom: 100px;\r\n}\r\n.slider {\r\n background: darkblue;\r\n  /* 슬라이더 전체 스타일 */\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  overflow: hidden;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n.slider-item {\r\n  /* 각 슬라이더 아이템 스타일 */\r\n  background-size: cover;\r\n  background-position: center;\r\n  background: gainsboro;\r\n  min-width: 24em;\r\n  height: 20em;\r\n  margin: 0 1em;\r\n}\r\n</style>\r\n"],"mappings":"AAyBA,eAAe;EACbA,IAAGA,CAAA,EAAK;IACN,OAAO;MACLC,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;MACpDC,YAAY,EAAE,CAAC;MACfC,UAAU,EAAE,KAAK;MACjBC,WAAW,EAAE,CAAC;MACdC,aAAa,EAAE;IACjB;EACF,CAAC;EACDC,OAAMA,CAAA,EAAK;IACT,IAAI,CAACC,cAAc,CAAC;EACtB,CAAC;EACDC,OAAO,EAAE;IACPD,cAAaA,CAAA,EAAK;MAChB,IAAI,CAACF,aAAY,GAAII,WAAW,CAAC,IAAI,CAACC,eAAe,EAAE,IAAI;IAC7D,CAAC;IACDA,eAAcA,CAAA,EAAK;MACjB,IAAI,CAACR,YAAW,GAAI,CAAC,IAAI,CAACA,YAAW,GAAI,CAAC,IAAI,IAAI,CAACD,KAAK,CAACU,MAAK;IAChE,CAAC;IACDC,mBAAkBA,CAAA,EAAK;MACrB,IAAI,CAACV,YAAW,GAAI,IAAI,CAACA,YAAW,KAAM,IAAI,IAAI,CAACD,KAAK,CAACU,MAAK,GAAI,IAAI,IAAI,CAACT,YAAW,GAAI;IAC5F,CAAC;IACDW,SAAQA,CAAGC,KAAK,EAAE;MAChB,IAAI,CAACX,UAAS,GAAI,IAAG;MACrB,IAAI,CAACC,WAAU,GAAIU,KAAK,CAACC,OAAM;IACjC,CAAC;IACDC,OAAMA,CAAGF,KAAK,EAAE;MACd,IAAI,CAAC,IAAI,CAACX,UAAU,EAAE;MACtB,IAAI,CAACA,UAAS,GAAI,KAAI;MAEtB,MAAMc,MAAK,GAAIH,KAAK,CAACC,OAAM,GAAI,IAAI,CAACX,WAAU;MAC9C,IAAIa,MAAK,GAAI,EAAE,EAAE;QACf,IAAI,CAACL,mBAAmB,CAAC;MAC3B,OAAO,IAAIK,MAAK,GAAI,CAAC,EAAE,EAAE;QACvB,IAAI,CAACP,eAAe,CAAC;MACvB;IACF;EACF,CAAC;EACDQ,aAAYA,CAAA,EAAK;IACfC,aAAa,CAAC,IAAI,CAACd,aAAa;EAClC;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}