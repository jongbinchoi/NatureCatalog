{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.items, item => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"slide-item\",\n      key: item\n    }, _toDisplayString(item), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementBlock","_Fragment","_renderList","$data","items","item","class","key"],"sources":["C:\\Users\\김재호\\Desktop\\NatureCatalog-1\\src\\views\\AboutView.vue"],"sourcesContent":["<template>\r\n\r\n <div class=\"slide-item\" v-for=\"item in items\" :key=\"item\">{{ item }}</div>\r\n\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data () {\r\n    return {\r\n      items: ['텍스트 1', '텍스트 2', '텍스트 3', '텍스트 4', '텍스트 5'],\r\n      currentSlide: 0,\r\n      isDragging: false,\r\n      startMouseX: 0,\r\n      slideInterval: null\r\n    }\r\n  },\r\n  mounted () {\r\n    this.startAutoSlide()\r\n  },\r\n  methods: {\r\n    startAutoSlide () {\r\n      this.slideInterval = setInterval(this.moveToNextSlide, 3000)\r\n    },\r\n    moveToNextSlide () {\r\n      this.currentSlide = (this.currentSlide + 1) % this.items.length\r\n    },\r\n    moveToPreviousSlide () {\r\n      this.currentSlide = this.currentSlide === 0 ? this.items.length - 1 : this.currentSlide - 1\r\n    },\r\n    startDrag (event) {\r\n      this.isDragging = true\r\n      this.startMouseX = event.clientX\r\n    },\r\n    endDrag (event) {\r\n      if (!this.isDragging) return\r\n      this.isDragging = false\r\n\r\n      const deltaX = event.clientX - this.startMouseX\r\n      if (deltaX > 50) {\r\n        this.moveToPreviousSlide()\r\n      } else if (deltaX < -50) {\r\n        this.moveToNextSlide()\r\n      }\r\n    }\r\n  },\r\n  beforeUnmount () {\r\n    clearInterval(this.slideInterval)\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\nbody{\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n.head{\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-top: 100px;\r\n  margin-bottom: 100px;\r\n}\r\n.slider {\r\n background: darkblue;\r\n  /* 슬라이더 전체 스타일 */\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  overflow: hidden;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n.slider-item {\r\n  /* 각 슬라이더 아이템 스타일 */\r\n  background-size: cover;\r\n  background-position: center;\r\n  background: gainsboro;\r\n  min-width: 24em;\r\n  height: 20em;\r\n  margin: 0 1em;\r\n}\r\n</style>\r\n"],"mappings":";;2BAECA,mBAAA,CAA0EC,SAAA,QAAAC,WAAA,CAAnCC,KAAA,CAAAC,KAAK,EAAbC,IAAI;yBAAnCL,mBAAA,CAA0E;MAArEM,KAAK,EAAC,YAAY;MAAwBC,GAAG,EAAEF;wBAASA,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}