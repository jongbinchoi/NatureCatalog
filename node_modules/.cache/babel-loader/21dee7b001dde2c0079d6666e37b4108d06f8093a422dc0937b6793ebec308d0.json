{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, createBlock as _createBlock, normalizeClass as _normalizeClass, normalizeStyle as _normalizeStyle, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-4cebd208\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"about\"\n};\nconst _hoisted_2 = {\n  class: \"head\"\n};\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", null, \"Naturecatalog\", -1 /* HOISTED */));\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"Our nature, their expression\", -1 /* HOISTED */));\nconst _hoisted_5 = {\n  class: \"slide-container\"\n};\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"img\", {\n  src: \"왼쪽버튼이미지입니다.\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_7 = [_hoisted_6];\nconst _hoisted_8 = {\n  class: \"slide-window\"\n};\nconst _hoisted_9 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"img\", {\n  src: \"오른쪽버튼이미지입니다.\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_10 = [_hoisted_9];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_SlideCard = _resolveComponent(\"SlideCard\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_hoisted_3, _hoisted_4, _createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => _ctx.moveSlideToLeft && _ctx.moveSlideToLeft(...args))\n  }, _hoisted_7), _createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"div\", {\n    class: _normalizeClass([\"slide\", {\n      'is-dragging': $data.isDragging\n    }]),\n    style: _normalizeStyle({\n      transform: 'translate3d(' + _ctx.slideCoord + 'px, 0, 0)'\n    })\n  }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.items, item => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"slide-item\",\n      key: item\n    }, _toDisplayString(item), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.cardArray, card => {\n    return _openBlock(), _createBlock(_component_SlideCard, {\n      key: card.name\n    });\n  }), 128 /* KEYED_FRAGMENT */))], 6 /* CLASS, STYLE */)])]), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => _ctx.moveSlideToRight && _ctx.moveSlideToRight(...args))\n  }, _hoisted_10)])]);\n}","map":{"version":3,"names":["class","_createElementVNode","src","_hoisted_6","_hoisted_9","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","onClick","_cache","args","_ctx","moveSlideToLeft","_hoisted_8","_normalizeClass","$data","isDragging","style","_normalizeStyle","transform","slideCoord","_Fragment","_renderList","items","item","key","cardArray","card","_createBlock","_component_SlideCard","name","moveSlideToRight"],"sources":["C:\\Users\\김재호\\Desktop\\NatureCatalog-1\\src\\views\\AboutView.vue"],"sourcesContent":["<template>\r\n  <div class=\"about\">\r\n    <div class =\"head\">\r\n      <h1>Naturecatalog</h1>\r\n     <h2>Our nature, their expression</h2>\r\n     <div class=\"slide-container\">\r\n    <button @click=\"moveSlideToLeft\">\r\n      <img src=\"왼쪽버튼이미지입니다.\" />\r\n    </button>\r\n   <div class=\"slide-window\">\r\n      <div class=\"slide\"\r\n           :class= \"{ 'is-dragging': isDragging }\"\r\n           :style=\"{transform: 'translate3d(' + slideCoord + 'px, 0, 0)',}\">\r\n        <div class=\"slide-item\" v-for=\"item in items\" :key=\"item\">{{ item }}</div>\r\n        <SlideCard v-for=\"card in cardArray\" :key=\"card.name\" /></div>\r\n      </div>\r\n    </div>\r\n    <button @click=\"moveSlideToRight\">\r\n      <img src=\"오른쪽버튼이미지입니다.\"/>\r\n    </button>\r\n  </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data () {\r\n    return {\r\n      items: ['텍스트 1', '텍스트 2', '텍스트 3', '텍스트 4', '텍스트 5'],\r\n      currentSlide: 0,\r\n      isDragging: false,\r\n      startMouseX: 0,\r\n      slideInterval: null\r\n    }\r\n  },\r\n  mounted () {\r\n    this.startAutoSlide()\r\n  },\r\n  methods: {\r\n    startAutoSlide () {\r\n      this.slideInterval = setInterval(this.moveToNextSlide, 3000)\r\n    },\r\n    moveToNextSlide () {\r\n      this.currentSlide = (this.currentSlide + 1) % this.items.length\r\n    },\r\n    moveToPreviousSlide () {\r\n      this.currentSlide = this.currentSlide === 0 ? this.items.length - 1 : this.currentSlide - 1\r\n    },\r\n    startDrag (event) {\r\n      this.isDragging = true\r\n      this.startMouseX = event.clientX\r\n    },\r\n    endDrag (event) {\r\n      if (!this.isDragging) return\r\n      this.isDragging = false\r\n\r\n      const deltaX = event.clientX - this.startMouseX\r\n      if (deltaX > 50) {\r\n        this.moveToPreviousSlide()\r\n      } else if (deltaX < -50) {\r\n        this.moveToNextSlide()\r\n      }\r\n    }\r\n  },\r\n  beforeUnmount () {\r\n    clearInterval(this.slideInterval)\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\nbody{\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n.head{\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-top: 100px;\r\n  margin-bottom: 100px;\r\n}\r\n.slider {\r\n background: darkblue;\r\n  /* 슬라이더 전체 스타일 */\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  overflow: hidden;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n.slider-item {\r\n  /* 각 슬라이더 아이템 스타일 */\r\n  background-size: cover;\r\n  background-position: center;\r\n  background: gainsboro;\r\n  min-width: 24em;\r\n  height: 20em;\r\n  margin: 0 1em;\r\n}\r\n</style>\r\n"],"mappings":";;;EACOA,KAAK,EAAC;AAAO;;EACXA,KAAK,EAAE;AAAM;gEAChBC,mBAAA,CAAsB,YAAlB,eAAa;gEAClBA,mBAAA,CAAqC,YAAjC,8BAA4B;;EAC3BD,KAAK,EAAC;AAAiB;gEAE3BC,mBAAA,CAAyB;EAApBC,GAAG,EAAC;AAAa;oBAAtBC,UAAyB,C;;EAEvBH,KAAK,EAAC;AAAc;gEAStBC,mBAAA,CAAyB;EAApBC,GAAG,EAAC;AAAc;qBAAvBE,UAAyB,C;;;uBAjB7BC,mBAAA,CAoBM,OApBNC,UAoBM,GAnBJL,mBAAA,CAkBI,OAlBJM,UAkBI,GAjBFC,UAAsB,EACvBC,UAAqC,EACrCR,mBAAA,CAWK,OAXLS,UAWK,GAVNT,mBAAA,CAES;IAFAU,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,IAAA,CAAAC,eAAA,IAAAD,IAAA,CAAAC,eAAA,IAAAF,IAAA,CAAe;kBAGhCZ,mBAAA,CAMS,OANTe,UAMS,GALNf,mBAAA,CAIgE;IAJ3DD,KAAK,EAAAiB,eAAA,EAAC,OAAO;MAAA,eACaC,KAAA,CAAAC;IAAU;IACnCC,KAAK,EAAAC,eAAA;MAAAC,SAAA,mBAA+BR,IAAA,CAAAS,UAAU;IAAA;yBAClDlB,mBAAA,CAA0EmB,SAAA,QAAAC,WAAA,CAAnCP,KAAA,CAAAQ,KAAK,EAAbC,IAAI;yBAAnCtB,mBAAA,CAA0E;MAArEL,KAAK,EAAC,YAAY;MAAwB4B,GAAG,EAAED;wBAASA,IAAI;qDACjEtB,mBAAA,CAAwDmB,SAAA,QAAAC,WAAA,CAA9BX,IAAA,CAAAe,SAAS,EAAjBC,IAAI;yBAAtBC,YAAA,CAAwDC,oBAAA;MAAlBJ,GAAG,EAAEE,IAAI,CAACG;;8DAGpDhC,mBAAA,CAES;IAFAU,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,IAAA,CAAAoB,gBAAA,IAAApB,IAAA,CAAAoB,gBAAA,IAAArB,IAAA,CAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}